---
apiVersion: v1
kind: Namespace
metadata:
  name: academy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: academy-metrics-1
  labels:
    app: academy-metrics-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: academy-metrics-1
  template:
    metadata:
      labels:
        app: academy-metrics-1
        circle_id: 'circle-1'
      annotations:
        prometheus.io/port: '8080'
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/actuator/prometheus'
    spec:
      containers:
        - name: prom-poc
          image: jeias/zup-academy:latest
          ports:
            - name: metrics1-port
              containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: academy-metrics-2
  labels:
    app: academy-metrics-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: academy-metrics-2
  template:
    metadata:
      labels:
        app: academy-metrics-2
        circle_id: 'circle-2'
      annotations:
        prometheus.io/port: '8080'
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/actuator/prometheus'
    spec:
      containers:
        - name: prom-poc
          image: jeias/zup-academy:latest
          ports:
            - name: metrics2-port
              containerPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |-
    global:
      scrape_interval:     15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'academy-metrics'
        metrics_path: /actuator/prometheus
        scrape_interval: 5s

        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - academy

        relabel_configs:
          - action: labelmap
            regex: _meta_kubernetes_pod_label(.+)
          - source_labels: [__meta_kubernetes_pod_label_circle_id]
            action: replace
            target_label: circle
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod_name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.12.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.retention.time=7d"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
          resources:
            limits:
              cpu: 1
              memory: 2048Mi
            requests:
              cpu: 300m
              memory: 1024Mi
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: academy-metrics1
  name: academy-metrics1-service
  namespace: academy
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: academy-metrics1
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: academy-metrics-2
  name: academy-metrics2-service
  namespace: academy
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: academy-metrics2
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/actuator/prometheus"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: default
    namespace: academy
